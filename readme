学做一个jQuery插件

通过CSS使div实现全屏效果
全屏要素
全屏的元素及其父元素都要设置height:100%
将html、body标签设置height:100%
（注：heigh:100%是随其父元素高度变化而变化的）

闭包的作用
(function($){
//do somethig
})(jQuery)

闭包的作用
1.避免全局依赖
2.避免第三方破坏
3.兼容jQuery操作符'$'和jQuery

jQuery插件开发方式
（一）类级别组件开发
 即给jQuery命名空间下添加新的全局函数，也称为静态方法
 jQuery.myPlugin=function(){
 //do something
 }
 例如：$.Ajax()、$.extend()

（一）对象级别组件开发
即挂在jQuery原型下的方法，这样通过选择器获取的jQuery
对象实例也能共享该方法，也称为动态方法

$.fn.myPlugin=function(){
//do something
}
$.fn===$.prototype
例如：addClass()、attr()等，需要创建实例来调用


链式调用
$("div").next().addClass()...
$.fn.myPlugin=function(){
return this.each(function(){
  //do something
  });
};
代码说明
-return this 返回当前对象，来维护插件的链式调用
-each 循环实现每个元素的访问

单例模式
$.fn.myPlugin=function(){
var me=$(this),
 instance=me.data("myPlugin");
 if(!instance){
 me.data("myPlugin",(instance=new myPlugin()));
 }
};

代码说明
-如果实例存在则不再重新创建实例
-利用data()来存放插件对象的实例



jQuery的extend方法的作用:将用户自定义的插件参数于插件的默认参数加以合并

.on()
语法：on(events[,selector][,data],handler(eventObject))
描述：在选定的元素上绑定一个或多个事件处理函数
1.events 一个或多空格分隔的事件类型，例如click keydown。
2.selector 一个选择器字符，用于过滤出被选中的元素中能触发事件的后代元素，如果为null，那么被选中的元素总是能触发事件。
3.data 事件触发时，要传递给处理函数的event.data。
4.handler(eventObject)事件触发时，执行的函数。

优点：
委托事件不仅可以给未创建的后代元素绑定事件外，当需要监视很多元素的时候，委托事件的开销更小

绑定鼠标滚轮事件
JS事件有很多需要兼容的地方,鼠标滚轮事件显然也有额外的差异.
包括IE6浏览器在内都适用mouseWheel,而只有火狐浏览器使用
DOMMouseScroll。
$(document).on("mouseWheel DOMMouseScroll",handler);

任何判断鼠标滚轮方向
1.其他浏览器通过wheeldalta属性来判断，但是火狐浏览器没有这个属性，但可以通过detail这个属性来判断
2.开发中发现每次向下滚动时，wheeldalta都是-120，但是detail却是3，火狐浏览器方向判断的数值正负与其他浏览器是相反的

绑定键盘事件keydown
说明：keydown事件发生在键盘的键被按下的时候。
原生js中判断按下了哪个键是存在兼容性问题的：
1.IE 只有keyCode属性
2.FireFox 中有which和charCode属性
3.Opera 中有keyCode和which属性等

但是jQuery解决了这个兼容问题。

jQuery中通过.witch属性和.keyCode属性来确定按下了哪个键：

transitionend
说明：transitionend事件会在csstransition结束后触发。



